package necesse.engine;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.util.function.Supplier;
import necesse.engine.util.GameRandom;
import org.lwjgl.glfw.GLFWImage;
import org.lwjgl.stb.STBImage;
import org.lwjgl.stb.STBImageResize;
import org.lwjgl.system.MemoryStack;
import org.lwjgl.system.MemoryUtil;

public class GameWindowIcon {
   public final int width;
   public final int height;
   private final byte[] data;

   public static GameWindowIcon getRandomIcon() {
      return (GameWindowIcon)GameRandom.getOneOf(new GameRandom(), (Supplier[])(GameWindowIcon::getGunsmithIcon, GameWindowIcon::getFarmerIcon, GameWindowIcon::getPirateCaptainIcon));
   }

   public static GameWindowIcon getGunsmithIcon() {
      return new GameWindowIcon(16, 16, new byte[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -125, 23, -1, -1, -125, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -125, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -39, 113, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -1, -125, 23, -1, -1, -125, 23, -1, -39, 113, 23, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, -39, 113, 23, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -61, 122, 60, -1, -61, 122, 60, -1, -49, -97, 121, -1, 121, 94, 55, -1, 121, 94, 55, -1, -49, -97, 121, -1, -61, 122, 60, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, -61, 122, 60, -1, -49, -97, 121, -1, -49, -97, 121, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -1, -1, -1, -1, 121, 109, -1, -1, 0, 0, 0, -1, -49, -97, 121, -1, -49, -97, 121, -1, 0, 0, 0, -1, 121, 109, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 121, 109, -1, -1, -49, -97, 121, -1, -41, -80, -110, -1, -41, -80, -110, -1, -49, -97, 121, -1, 121, 109, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -61, 122, 60, -1, -49, -97, 121, -1, -49, -97, 121, -1, -49, -97, 121, -1, -49, -97, 121, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 0, -1, -61, 122, 60, -1, -61, 122, 60, -1, -61, 122, 60, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -52, -52, -52, -1, -27, -27, -27, -1, 0, 0, 0, -1, 75, 75, 75, -1, -27, -27, -27, -1, -27, -27, -27, -1, 75, 75, 75, -1, 0, 0, 0, -1, -27, -27, -27, -1, -52, -52, -52, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, -1, -52, -52, -52, -1, -27, -27, -27, -1, 0, 0, 0, -1, 75, 75, 75, -1, -27, -27, -27, -1, -27, -27, -27, -1, 75, 75, 75, -1, 0, 0, 0, -1, -27, -27, -27, -1, -52, -52, -52, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 85, 85, 85, -1, 85, 85, 85, -1, 96, 96, 96, -1, 96, 96, 96, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -49, -97, 121, -1, -49, -97, 121, -1, 0, 0, 0, -1, 85, 85, 85, -1, 85, 85, 85, -1, 85, 85, 85, -1, 96, 96, 96, -1, 0, 0, 0, -1, -49, -97, 121, -1, -49, -97, 121, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0});
   }

   public static GameWindowIcon getFarmerIcon() {
      return new GameWindowIcon(16, 16, new byte[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 0, 0, 0, -1, 114, 51, 9, -1, 0, 0, 0, -1, 0, 0, 0, -1, -106, 119, 70, -1, 0, 0, 0, -1, -106, 119, 70, -1, 0, 0, 0, -1, -106, 119, 70, -1, 0, 0, 0, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 102, 47, 8, -1, 89, 39, 7, -1, 0, 0, 0, -1, 102, 47, 8, -1, 0, 0, 0, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 47, 8, -1, 0, 0, 0, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 47, 8, -1, 89, 39, 7, -1, 0, 0, 0, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 47, 8, -1, 89, 39, 7, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 86, 69, 40, -1, 0, 0, 0, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 89, 39, 7, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 86, 69, 40, -1, 86, 69, 40, -1, 86, 69, 40, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, -34, -106, 84, -1, -18, -55, -88, -1, -18, -55, -88, -1, -34, -106, 84, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, -1, -1, -1, -1, 121, 109, -1, -1, 0, 0, 0, -1, -18, -55, -88, -1, -18, -55, -88, -1, 0, 0, 0, -1, 121, 109, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, -1, -1, -1, -1, 121, 109, -1, -1, -18, -55, -88, -1, -7, -32, -54, -1, -7, -32, -54, -1, -18, -55, -88, -1, 121, 109, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 93, 85, -1, -18, -55, -88, -1, -18, -55, -88, -1, -18, -55, -88, -1, -18, -55, -88, -1, 102, 93, 85, -1, 0, 0, 0, -1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 102, 93, 85, -1, 102, 93, 85, -1, 102, 93, 85, -1, 102, 93, 85, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 73, 49, 27, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 57, 71, 26, -1, 68, 51, 43, -1, 64, 79, 29, -1, 64, 79, 29, -1, 68, 51, 43, -1, 0, 0, 0, -1, 64, 79, 29, -1, 57, 71, 26, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -18, -55, -88, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 57, 71, 26, -1, 68, 51, 43, -1, 64, 79, 29, -1, 64, 79, 29, -1, 68, 51, 43, -1, 0, 0, 0, -1, 64, 79, 29, -1, 57, 71, 26, -1, 0, 0, 0, -1, 0, 0, 0, 0});
   }

   public static GameWindowIcon getPirateCaptainIcon() {
      return new GameWindowIcon(16, 16, new byte[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -61, 122, 60, -1, -61, 122, 60, -1, -49, -97, 121, -1, -49, -97, 121, -1, 25, 25, 25, -1, -49, -97, 121, -1, -61, 122, 60, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, -61, 122, 60, -1, -49, -97, 121, -1, -49, -97, 121, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -1, -1, -1, -1, 90, 70, 50, -1, 0, 0, 0, -1, -49, -97, 121, -1, -49, -97, 121, -1, 0, 0, 0, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 90, 70, 50, -1, -49, -97, 121, -1, -41, -80, -110, -1, -41, -80, -110, -1, -49, -97, 121, -1, 25, 25, 25, -1, 25, 25, 25, -1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -61, 122, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -61, 122, 60, -1, 0, 0, 0, -1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -27, -27, -27, -1, -27, -27, -27, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, -91, 41, 41, -1, -56, 50, 50, -1, 0, 0, 0, -1, 0, 0, 0, -1, -27, -27, -27, -1, -27, -27, -27, -1, 0, 0, 0, -1, 0, 0, 0, -1, -56, 50, 50, -1, -91, 41, 41, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, -1, -91, 41, 41, -1, -56, 50, 50, -1, 0, 0, 0, -1, -56, 50, 50, -1, 0, 0, 0, -1, 0, 0, 0, -1, -56, 50, 50, -1, 0, 0, 0, -1, -56, 50, 50, -1, -91, 41, 41, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0});
   }

   public static void copyIconConstructor(String var0) {
      MemoryStack var1 = MemoryStack.stackPush();

      try {
         IntBuffer var2 = var1.mallocInt(1);
         IntBuffer var3 = var1.mallocInt(1);
         IntBuffer var4 = var1.mallocInt(1);
         ByteBuffer var5 = STBImage.stbi_load(var0, var2, var3, var4, 4);
         copyIconConstructor(var5, var2.get(0), var3.get(0));
         STBImage.stbi_image_free(var5);
      } catch (Throwable var7) {
         if (var1 != null) {
            try {
               var1.close();
            } catch (Throwable var6) {
               var7.addSuppressed(var6);
            }
         }

         throw var7;
      }

      if (var1 != null) {
         var1.close();
      }

   }

   public static void copyIconConstructor(ByteBuffer var0, int var1, int var2) {
      byte[] var3 = new byte[var0.capacity()];
      var0.get(var3);
      StringBuilder var4 = new StringBuilder();

      for(int var5 = 0; var5 < var2; ++var5) {
         for(int var6 = 0; var6 < var1; ++var6) {
            int var7 = (var6 + var5 * var1) * 4;
            var4.append(var3[var7]).append(", ");
            var4.append(var3[var7 + 1]).append(", ");
            var4.append(var3[var7 + 2]).append(", ");
            var4.append(var3[var7 + 3]).append(", ");
         }

         var4.append("\n");
      }

      String var8 = var4.substring(0, var4.lastIndexOf(","));
      String var9 = "new GameIcon(" + var1 + ", " + var2 + ", new byte[] {" + var8 + "});";
      Screen.putClipboard(var9);
      System.out.println("GameIcon constructor copied to clipboard");
   }

   public static ByteBuffer scaleIcon(GameWindowIcon var0, int var1) {
      ByteBuffer var2 = MemoryUtil.memAlloc(var0.data.length);
      var2.put(var0.data);
      var2.position(0);
      ByteBuffer var3 = MemoryUtil.memAlloc(var1 * var1 * 4);
      STBImageResize.stbir_resize_uint8(var2, var0.width, var0.height, 0, var3, var1, var1, 0, 4);
      MemoryUtil.memFree(var2);
      return var3;
   }

   public static ByteBuffer bufferAndScaleIcon(GLFWImage.Buffer var0, int var1, GameWindowIcon var2, int var3) {
      ByteBuffer var4 = scaleIcon(var2, var3);
      ((GLFWImage.Buffer)var0.position(var1)).width(var3).height(var3).pixels(var4);
      return var4;
   }

   private GameWindowIcon(int var1, int var2, byte[] var3) {
      if (var3.length != var1 * var2 * 4) {
         throw new IllegalArgumentException("Width and height did not match imgData size");
      } else {
         this.width = var1;
         this.height = var2;
         this.data = var3;
      }
   }
}
